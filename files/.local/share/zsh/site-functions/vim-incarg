emulate -L zsh

local match mbegin mend MATCH MBEGIN MEND

# locate the digit
integer pos=$(( CURSOR + 1 ))
while [[ $BUFFER[pos] != [[:digit:]] ]]; do
  (( pos++ ))
  (( $pos > $#BUFFER )) && return
done

# determine the amount to increment
integer ninc=${NUMERIC:-1}
if [[ "$WIDGET" = *-decarg ]]; then
  (( ninc = -ninc ))
fi
if [[ "$WIDGET" = sync-* ]]; then
  integer pane_index=1
  if [[ -n "$TMUX_PANE" ]]; then
    pane_index="$(tmux display-message -pt "$TMUX_PANE" '#{pane_index}')"
  elif [[ "$ITERM_SESSION_ID" =~ '^w[0-9]+t[0-9]+p([0-9]+)' ]]; then
    pane_index=$match[1]
  fi
  (( ninc *= pane_index ))
fi

# find the start of the number
integer first=$pos
while [[ $BUFFER[first-1] = [[:digit:]] ]]; do
  (( first-- ))
done
if [[ $BUFFER[first-1] = - ]]; then
  (( first-- ))
fi

# find the end of the number
integer last=$pos
while [[ $BUFFER[last+1] = [[:digit:]] ]]; do
  (( last++ ))
done

# calculate the width
integer ndigits=0
case "$BUFFER[first,first+1]" in
  0*|-0) ndigits=$((last - first + 1)) ;;
esac

# change the number and move the cursor after it
integer oldlen=$#BUFFER
BUFFER[first,last]="$(printf "%0${ndigits}d" $((BUFFER[first,last] + ninc)))"
(( CURSOR = last + $#BUFFER - oldlen - 1 ))

return 0
