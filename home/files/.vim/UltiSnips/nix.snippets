snippet nixshell "A nix-shell environment template" b
{ pkgs ? import <nixpkgs> {} }:

with pkgs;

stdenv.mkDerivation rec {
	name = "${1:name}";
	buildInputs = [
		$2
	];

	env = buildEnv {
		paths = buildInputs;
		inherit name;
	};

	builder = builtins.toFile "builder.sh" ''
		source \$stdenv/setup
		ln -s \$env $out
	'';
}
endsnippet

snippet fakesha256 "A placeholder sha256 value" b
sha256 = "0000000000000000000000000000000000000000000000000000";
endsnippet

snippet fetchFromGitHub "fetchFromGitHub ..."
fetchFromGitHub {
	owner = "$1";
	repo = "$2";
	rev = "${3:v\${version}}";
	sha256 = "${4:0000000000000000000000000000000000000000000000000000}";
}
endsnippet

snippet fetchurl "fetchurl ..."
fetchurl {
	url = $1;
	sha256 = "${2:0000000000000000000000000000000000000000000000000000}";
}
endsnippet

snippet meta "meta" b
meta = with lib; {
	description = "$1";
	homepage = "$2";
	license = licenses.$3;
	maintainers = with maintainers; [ $4 ];
};
endsnippet

snippet mkDerivation "mkDerivation ..."
stdenv.mkDerivation rec {
	pname = "$1";
	version = "$2";

	src = $3;

	$4
}
endsnippet

snippet nixpkgs "import nixpkgs" b
{ pkgs ? import <nixpkgs> { } }:
endsnippet

snippet overrideAttrs "reuse expression from nixpkgs" b
{ pkgs ? import <nixpkgs> { } }:

pkgs.$1.overrideAttrs (drv: {
	src = ./.;

	nativeBuildInputs = drv.nativeBuildInputs ++ [ $2 ];
})
endsnippet

snippet news "Home Manager news entry" b
{
	time = "`!p snip.rv = datetime_now_iso8601_utc()`";
	message = ''
		${1:A new module is available: '$2'}
	'';
}
endsnippet
