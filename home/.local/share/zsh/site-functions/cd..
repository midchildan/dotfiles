# Based on https://raw.githubusercontent.com/Tarrasch/zsh-bd/master/bd.zsh

emulate -L zsh

(( $#<1 )) && {
  cd ..
  return
}

local i

# example:
#   $PWD == /home/arash/abc ==> $cwd_depth == 3
local cwd_depth=${#${(ps:/:)${PWD}}}

# First try to find a folder with matching name (could potentially be a number)
# Get parents (in reverse order)
local parents=()
for i in {$((cwd_depth+1))..2}; do
  parents+="$(echo $PWD | cut -d'/' -f$i)"
done
parents+="/"

# Build dest and 'cd' to it
local parent dest="./"
foreach parent ($parents); do
  if [[ "$1" == "$parent" ]]; then
    cd "$dest"
    return 0
  fi
  dest+="../"
done

# If the user provided an integer, go up as many times as asked
dest="./"
if [[ "$1" = <-> ]]; then
  if $(( $1 > $cwd_depth )); then
    print -- "Error: Can only go up $cwd_depth directories" >&2
    return 1
  fi
  for i in {1.."$1"}; do
    dest+="../"
  done
  cd "$dest"
  return 0
fi

# If the above methods fail
print -- "Error: No parent directory named '$1'" >&2
return 1
