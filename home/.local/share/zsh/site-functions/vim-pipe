# The Z Shell is copyright (c) 1992-2017 Paul Falstad, Richard Coleman,
# Zoltán Hidvégi, Andrew Main, Peter Stephenson, Sven Wischnowsky, and
# others.  All rights reserved.  Individual authors, whether or not
# specifically named, retain copyright in all changes; in what follows, they
# are referred to as `the Zsh Development Group'.  This is for convenience
# only and this body has no legal status.  The Z shell is distributed under
# the following licence; any provisions made in individual files take
# precedence.
#
# Permission is hereby granted, without written agreement and without
# licence or royalty fees, to use, copy, modify, and distribute this
# software and to distribute modified versions of this software for any
# purpose, provided that the above copyright notice and the following
# two paragraphs appear in all copies of this software.
#
# In no event shall the Zsh Development Group be liable to any party for
# direct, indirect, special, incidental, or consequential damages arising out
# of the use of this software and its documentation, even if the Zsh
# Development Group have been advised of the possibility of such damage.
#
# The Zsh Development Group specifically disclaim any warranties, including,
# but not limited to, the implied warranties of merchantability and fitness
# for a particular purpose.  The software provided hereunder is on an "as is"
# basis, and the Zsh Development Group have no obligation to provide
# maintenance, support, updates, enhancements, or modifications.


# Example of a widget that takes a vi motion
# Modified to accept more granular motions than a single line

# Filter part of buffer corresponding to a vi motion through an external
# program.

# To enable with vi compatible bindings use:
#   autoload -Uz vi-pipe
#   bindkey -a '!' vi-pipe

setopt localoptions noksharrays

autoload -Uz read-from-minibuffer
local _save_cut="$CUTBUFFER" REPLY

# mark this widget as a vi change so it can be repeated as a whole
zle -f vichange

# select target region
(( REGION_ACTIVE )) || zle -U v
# Use the standard vi-change to accept a vi motion.
zle .vi-change || return
read-from-minibuffer "!"
zle .vi-cmd-mode
local _save_cur=$CURSOR

# cut buffer contains the deleted text and can be modified
CUTBUFFER=$(eval "$REPLY" <<<"$CUTBUFFER")

# put the modified text back in position.
if [[ CURSOR -eq 0 || $BUFFER[CURSOR] = $'\n' ]]; then
  # at the beginning of a line, vi-delete won't have moved the cursor
  # back to a previous line
  zle .vi-put-before -n 1
else
  zle .vi-put-after -n 1
fi

# restore cut buffer and cursor to the start of the range
CUTBUFFER="$_save_cut" CURSOR="$_save_cur"
