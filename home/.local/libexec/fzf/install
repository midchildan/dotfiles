#!/bin/bash

# Temporary installer script for fzf to be used until it's packaged in Debian.

# This script is intended to be run from vim-plug. If running manually,
# be sure to cd to the directory where fzf is cloned first.

main() {
  rm ~/.local/bin/fzf ~/.local/bin/fzf-tmux

  [[ -x /usr/bin/fzf ]] && return
  [[ -x /usr/local/bin/fzf ]] && return
  [[ -x ~/.nix-profile/bin/fzf ]] && return

  set -e

  local version="$(curl -sfL 'https://api.github.com/repos/junegunn/fzf-bin/releases/latest' \
    | grep tag_name \
    | cut -d : -f 2 \
    | cut -d '"' -f 2)"
  local os="$(uname -s | tr '[:upper:]' '[:lower:]' | tr -d '\n')"
  local arch="$(uname -m)"
  case "$arch" in
    *64) arch="amd64" ;;
    *86) arch="386" ;;
    armv5*) arch="arm5" ;;
    armv6*) arch="arm6" ;;
    armv7*) arch="arm7" ;;
    armv8*) arch="arm8" ;;
    *) return 1;;
  esac

  cd bin
  download "$version" "$os" "$arch" || return 1

  fzf_dir="$(pwd)"
  mkdir -p ~/.local/bin
  cd ~/.local/bin
  ln -s "$(relative_path "$fzf_dir/fzf")" .
  ln -s "$(relative_path "$fzf_dir/fzf-tmux")" .
}

relative_path() {
  [[ "$#" != 1 ]] && abort "Wrong number of arguments."
  if command -v realpath >/dev/null 2>&1; then
    realpath --no-symlinks --relative-to=. "$1"
  elif command -v perl >/dev/null 2>&1; then
    perl -e "use File::Spec; print File::Spec->abs2rel('$1')"
  elif command -v ruby >/dev/null 2>&1; then
    ruby -e \
      "require 'pathname'; print(Pathname.new('$1').relative_path_from(Pathname.new('$(pwd)')))"
  elif command -v python3 >/dev/null 2>&1; then
    python3 -c "import os; print(os.path.relpath('$1'), end='')"
  elif command -v python2 >/dev/null 2>&1; then
    python2 -c \
      "from __future__ import print_function; import os; print(os.path.relpath('$1'), end='')"
  else
    abort "Needs coreutils, python, ruby, or perl."
  fi
}

download() {
  local version="$1"
  local os="$2"
  local arch="$3"
  local url="https://github.com/junegunn/fzf-bin/releases/download/${version}/fzf-${version}-${os}_${arch}.tgz"

  curl -sfL "$url" | tar xz
  [[ ! -f fzf ]] && return 1
  chmod +x fzf
}

main
