#############
#  general  #
#############

set -g base-index 1
set -g renumber-windows on
set -g mouse on
set -g history-limit 50000
set -g display-time 4000
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g set-titles on

###########
#  theme  #
###########

set -g status-style "fg=white,bg=black"
set -g status-right '--#{client_key_table}-- #{=13:host_short} %H:%M %b-%d-%y'

set-hook -g 'after-new-window' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'after-kill-pane' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'pane-exited' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'after-split-window' \
  'if -b "[ \#{window_panes} -gt 1 ]" "set pane-border-status top"'

#################
#  keybindings  #
#################

# vi bindings
set -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X begin-selection \;\
  send-keys -X rectangle-toggle

# change prefix
unbind C-b
set -g prefix C-z
bind C-z switch-client -T normal
bind -T normal C-z send-prefix

# Don't wait after escape key input, since it slows down mode-switching in vim.
set -g escape-time 0

# mouse
bind -n MouseDrag1Status swap-window -t=
bind -n WheelUpPane if -Ft= "#{||,#{mouse_any_flag},#{pane_in_mode}}" \
  "select-pane -t=; send-keys -M" \
  "if -Ft= '#{alternate_on}' 'select-pane -t=; send-keys -t= Up' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane if -Ft= "#{alternate_on}" \
  "select-pane -t=; send-keys -t= Down" \
  "select-pane -t=; send-keys -M"

#################
#  normal mode  #
#################

bind -T normal k select-pane -U \; switch-client -T normal
bind -T normal j select-pane -D \; switch-client -T normal
bind -T normal h select-pane -L \; switch-client -T normal
bind -T normal l select-pane -R \; switch-client -T normal
bind -T normal K resize-pane -U \; switch-client -T normal
bind -T normal J resize-pane -D \; switch-client -T normal
bind -T normal H resize-pane -L \; switch-client -T normal
bind -T normal L resize-pane -R \; switch-client -T normal
bind -T normal C-k swap-pane -U \; switch-client -T normal
bind -T normal C-j swap-pane -D \; switch-client -T normal
bind -T normal C-n new-window \; switch-client -T normal
bind -T normal g switch-client -T g
bind -T normal G display-panes \; switch-client -T normal

bind -T normal c switch-client -T c
bind -T normal d switch-client -T d
bind -T normal m select-pane -m \; switch-client -T normal
bind -T normal p paste-buffer \; switch-client -T normal
bind -T normal t clock-mode \; switch-client -T normal
bind -T normal x confirm-before -p "kill-pane #P? (y/n)" kill-pane \;\
  switch-client -T normal
bind -T normal y copy-mode
bind -T normal X confirm-before -p "kill-window #W? (y/n)" kill-window \;\
  switch-client -T normal
bind -T normal Z switch-client -T Z
bind -T normal C-g display-message \; switch-client -T normal
bind -T normal C-l refresh-client \; switch-client -T normal
bind -T normal C-o if '[ #{window_panes} -gt 1 ]' last-pane last-window \;\
  switch-client -T normal
bind -T normal C-w switch-client -T ctrl-w
bind -T normal '"' choose-buffer \; switch-client -T normal
bind -T normal "'" command-prompt -p index "select-window -t ':%%'"
bind -T normal : command-prompt \; switch-client -T normal
bind -T normal ? list-keys \; switch-client -T normal
bind -T normal Enter resize-pane -Z \; switch-client -T normal
bind -T normal Space next-layout \; switch-client -T normal

############
#  c mode  #
############

bind -T c s command-prompt -I "#S" "rename-session '%%'" \;\
  switch-client -T normal
bind -T c w command-prompt -I "#W" "rename-window '%%'" \;\
  switch-client -T normal

############
#  d mode  #
############

bind -T d b delete-buffer \; switch-client -T normal
bind -T d m select-pane -M \; switch-client -T normal

############
#  g mode  #
############

bind -T g 0 select-window -t :0 \; switch-client -T normal
bind -T g 1 select-window -t :1 \; switch-client -T normal
bind -T g 2 select-window -t :2 \; switch-client -T normal
bind -T g 3 select-window -t :3 \; switch-client -T normal
bind -T g 4 select-window -t :4 \; switch-client -T normal
bind -T g 5 select-window -t :5 \; switch-client -T normal
bind -T g 6 select-window -t :6 \; switch-client -T normal
bind -T g 7 select-window -t :7 \; switch-client -T normal
bind -T g 8 select-window -t :8 \; switch-client -T normal
bind -T g 9 select-window -t :9 \; switch-client -T normal
bind -T g b choose-tree
bind -T g s switch-client -n \; switch-client -T normal
bind -T g S switch-client -p \; switch-client -T normal
bind -T g t next-window \; switch-client -T normal
bind -T g T previous-window \; switch-client -T normal

############
#  Z mode  #
############

bind -T Z C choose-client
bind -T Z Q suspend-client
bind -T Z Z detach-client

#################
#  ctrl-w mode  #
#################

bind -T ctrl-w K resize-pane -U 5 \; switch-client -T normal
bind -T ctrl-w J resize-pane -D 5 \; switch-client -T normal
bind -T ctrl-w H resize-pane -L 5 \; switch-client -T normal
bind -T ctrl-w L resize-pane -R 5 \; switch-client -T normal

bind -T ctrl-w o confirm-before -p "kill panes? (y/n)" "kill-pane -a" \;\
  switch-client -T normal
bind -T ctrl-w r rotate-window -D \; switch-client -T normal
bind -T ctrl-w s split-window -v -c "#{pane_current_path}" \;\
  switch-client -T normal
bind -T ctrl-w v split-window -h -c "#{pane_current_path}" \;\
  switch-client -T normal
bind -T ctrl-w w select-pane -t :.+ \; switch-client -T normal
bind -T ctrl-w R rotate-window \; switch-client -T normal
bind -T ctrl-w T break-pane \; switch-client -T normal
bind -T ctrl-w C-o confirm-before -p "kill panes? (y/n)" "kill-pane -a" \;\
  switch-client -T normal
bind -T ctrl-w C-r rotate-window \; switch-client -T normal
bind -T ctrl-w C-s split-window -v \; switch-client -T normal
bind -T ctrl-w C-v split-window -h \; switch-client -T normal
bind -T ctrl-w C-w select-pane -t :.+ \; switch-client -T normal
bind -T ctrl-w / command-prompt "find-window '%%'"
