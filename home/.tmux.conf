#############
#  general  #
#############

set -g base-index 1
set -g renumber-windows on
set -g mouse on
set -g history-limit 50000
set -g display-time 4000
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g set-titles on

###########
#  theme  #
###########

_curr_mode="#{?pane_in_mode,copy,#{client_key_table}}"
_sty_mode="#{?client_prefix,yellow,#{?pane_in_mode,blue,green}}"
_sty_stat="#[default,fg=black,bg=${_sty_mode}]"
_sty_sep1="#[default,fg=${_sty_mode}]"
_sty_sep2="#[reverse,fg=${_sty_mode}]"
_sep_lmain1="#{?USE_POWERLINE,,}"
_sep_lmain2="#{?USE_POWERLINE,, }"
_sep_lsub="#{?USE_POWERLINE,,|}"
_sep_rmain="#{?USE_POWERLINE,,}"
_sep_rsub="#{?USE_POWERLINE,,|}"
_seg_host="#{?#{==:#{SSH_CONNECTION},},,#{?USE_POWERLINE, ,S:}}#{=17:host_short}"
_seg_sync="#{?pane_synchronized,sync ${_sep_rsub} ,}"
_seg_table="${_curr_mode} ${_sep_rsub} "
_seg_mode="#{?#{==:${_curr_mode},root},${_seg_sync},${_seg_table}}"

set -g status-style "fg=white,bg=black"
set -g status-left "${_sty_stat} ${_ico_ssh}#{=7:session_name} ${_sty_sep1}${_sep_lmain2}"
set -g status-right "${_sty_sep1}${_sep_rmain}${_sty_stat} ${_seg_mode}%H:%M %b-%d-%y ${_sep_rsub} ${_seg_host} "
set -g status-right-length 50
set -g window-status-format " #I ${_sep_lsub} #W#{?window_flags,#{window_flags},}"
set -g window-status-current-format "${_sty_sep2}${_sep_lmain1}${_sty_stat} #I ${_sep_lsub} #W#{?window_flags,#{window_flags},} ${_sty_sep1}${_sep_lmain1}"
set -ga update-environment "USE_POWERLINE"

set-hook -g 'after-new-window' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'after-kill-pane' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'pane-exited' \
  'if -b "[ \#{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g 'after-split-window' \
  'if -b "[ \#{window_panes} -gt 1 ]" "set pane-border-status top"'

setenv -gu _curr_mode
setenv -gu _sty_mode
setenv -gu _sty_stat
setenv -gu _sty_sep1
setenv -gu _sty_sep2
setenv -gu _sep_lmain1
setenv -gu _sep_lmain2
setenv -gu _sep_lsub
setenv -gu _sep_rmain
setenv -gu _sep_rsub
setenv -gu _seg_host
setenv -gu _seg_sync
setenv -gu _seg_table
setenv -gu _seg_mode

#################
#  keybindings  #
#################

# prefix
set -g prefix C-z
unbind -a -T prefix
bind C-z send-prefix

# vi bindings
set -g mode-keys vi

# Don't wait after escape key input, since it slows down mode-switching in vim.
set -g escape-time 0

# mouse
bind -n MouseDrag1Status swap-window -t=
bind -n WheelUpPane if -Ft= "#{||:#{mouse_any_flag},#{pane_in_mode}}" \
  "select-pane -t=; send -M" \
  "if -Ft= '#{alternate_on}' 'select-pane -t=; send -t= Up' 'select-pane -t=; copy-mode -e; send -M'"
bind -n WheelDownPane if -Ft= "#{||:#{?alternate_on,#{mouse_any_flag},1},#{pane_in_mode}}" \
  "select-pane -t=; send -M" \
  "select-pane -t=; send -t= Down"

#################
#  prefix mode  #
#################

bind k select-pane -U \; switch-client -T prefix
bind j select-pane -D \; switch-client -T prefix
bind h select-pane -L \; switch-client -T prefix
bind l select-pane -R \; switch-client -T prefix
bind K resize-pane -U \; switch-client -T prefix
bind J resize-pane -D \; switch-client -T prefix
bind H resize-pane -L \; switch-client -T prefix
bind L resize-pane -R \; switch-client -T prefix
bind C-b copy-mode -ue
bind C-k swap-pane -U \; switch-client -T prefix
bind C-j swap-pane -D \; switch-client -T prefix
bind C-n new-window \; switch-client -T prefix
bind C-u copy-mode -e \; send -X halfpage-up
bind C-y copy-mode -e \; send -X scroll-up
bind g switch-client -T g
bind G display-panes \; switch-client -T prefix

bind i switch-client -T root
bind c switch-client -T c
bind d switch-client -T d
bind f switch-client -T copycat
bind m select-pane -m \; switch-client -T prefix
bind p paste-buffer \; switch-client -T prefix
bind t clock-mode \; switch-client -T prefix
bind x confirm-before -p "kill-pane #P? (y/n)" kill-pane \;\
  switch-client -T prefix
bind y copy-mode
bind I setw synchronize-panes \; switch-client -T root
bind X confirm-before -p "kill-window #W? (y/n)" kill-window \;\
  switch-client -T prefix
bind Z switch-client -T Z
bind C-g display-message \; switch-client -T prefix
bind C-l refresh-client \; switch-client -T prefix
bind C-o if '[ #{window_panes} -gt 1 ]' last-pane last-window \;\
  switch-client -T prefix
bind C-w switch-client -T ctrl-w
bind '"' switch-client -T buffer
bind "'" command-prompt -p index "select-window -t ':%%'"
bind . send-prefix
bind / copy-mode \; command-prompt -ip "(search up)" \
  -I"#{pane_search_string}" "send -X search-backward-incremental \"%%%\""
bind : command-prompt \; switch-client -T prefix
bind ? list-keys
bind Enter resize-pane -Z \; switch-client -T prefix
bind Space next-layout \; switch-client -T prefix

###############
#  copy mode  #
###############

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi / command-prompt -ip "(search up)" \
  -I"#{pane_search_string}" "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -ip "(search down)" \
  -I"#{pane_search_string}" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi C-v send -X begin-selection \;\
  send -X rectangle-toggle

############
#  c mode  #
############

bind -T c s command-prompt -I "#S" "rename-session '%%'" \;\
  switch-client -T prefix
bind -T c w command-prompt -I "#W" "rename-window '%%'" \;\
  switch-client -T prefix

############
#  d mode  #
############

bind -T d b delete-buffer \; switch-client -T prefix
bind -T d m select-pane -M \; switch-client -T prefix

############
#  g mode  #
############

bind -T g 0 select-window -t :0 \; switch-client -T prefix
bind -T g 1 select-window -t :1 \; switch-client -T prefix
bind -T g 2 select-window -t :2 \; switch-client -T prefix
bind -T g 3 select-window -t :3 \; switch-client -T prefix
bind -T g 4 select-window -t :4 \; switch-client -T prefix
bind -T g 5 select-window -t :5 \; switch-client -T prefix
bind -T g 6 select-window -t :6 \; switch-client -T prefix
bind -T g 7 select-window -t :7 \; switch-client -T prefix
bind -T g 8 select-window -t :8 \; switch-client -T prefix
bind -T g 9 select-window -t :9 \; switch-client -T prefix
bind -T g b choose-tree
bind -T g s switch-client -n \; switch-client -T prefix
bind -T g S switch-client -p \; switch-client -T prefix
bind -T g t next-window \; switch-client -T prefix
bind -T g T previous-window \; switch-client -T prefix
bind -T g / run ~/.local/opt/tmux-copycat/scripts/copycat_search.sh

############
#  Z mode  #
############

bind -T Z C choose-client
bind -T Z Q suspend-client
bind -T Z Z detach-client

#################
#  buffer mode  #
#################

bind -T buffer p choose-buffer
bind -T buffer + choose-buffer 'run "tmux show-buffer -b \'%%\' | pbcopy"'

#################
#  ctrl-w mode  #
#################

bind -T ctrl-w K resize-pane -U 5 \; switch-client -T prefix
bind -T ctrl-w J resize-pane -D 5 \; switch-client -T prefix
bind -T ctrl-w H resize-pane -L 5 \; switch-client -T prefix
bind -T ctrl-w L resize-pane -R 5 \; switch-client -T prefix

bind -T ctrl-w o confirm-before -p "kill panes? (y/n)" "kill-pane -a" \;\
  switch-client -T prefix
bind -T ctrl-w r rotate-window -D \; switch-client -T prefix
bind -T ctrl-w s split-window -v -c "#{pane_current_path}" \;\
  switch-client -T prefix
bind -T ctrl-w v split-window -h -c "#{pane_current_path}" \;\
  switch-client -T prefix
bind -T ctrl-w w select-pane -t :.+ \; switch-client -T prefix
bind -T ctrl-w R rotate-window \; switch-client -T prefix
bind -T ctrl-w T break-pane \; switch-client -T prefix
bind -T ctrl-w C-o confirm-before -p "kill panes? (y/n)" "kill-pane -a" \;\
  switch-client -T prefix
bind -T ctrl-w C-r rotate-window \; switch-client -T prefix
bind -T ctrl-w C-s split-window -v -c "#{pane_current_path}" \;\
  switch-client -T prefix
bind -T ctrl-w C-v split-window -h -c "#{pane_current_path}" \;\
  switch-client -T prefix
bind -T ctrl-w C-w select-pane -t :.+ \; switch-client -T prefix
bind -T ctrl-w / command-prompt "find-window '%%'"

##################
#  copycat mode  #
##################

bind -T copycat u run "~/.local/opt/tmux-copycat/scripts/copycat_mode_start.sh \
  '(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*'"
bind -T copycat f run "~/.local/opt/tmux-copycat/scripts/copycat_mode_start.sh \
  '(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*'"
bind -T copycat '#' run "~/.local/opt/tmux-copycat/scripts/copycat_mode_start.sh \
  '\\b[0-9a-fA-F]{7,64}\\b'"
bind -T copycat 1 run "~/.local/opt/tmux-copycat/scripts/copycat_mode_start.sh \
  '\\b[[:digit:]]+\\b'"
bind -T copycat 4 run "~/.local/opt/tmux-copycat/scripts/copycat_mode_start.sh \
  '[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}'"
bind -T copycat g run "~/.local/opt/tmux-copycat/scripts/copycat_git_special.sh #{pane_current_path}"
